need_packages <- c("stringr", "splines", "foreign", "survival", "lmtest", "shiny", "shinyBS")
new_packages <- need_packages[!(need_packages %in% installed.packages()[, "Package"])]
if (length(new.packages) > 0) install.packages(new_packages)
shiny::runGitHub("shiny-nonlinear", "NErler")
devtools::install_github("sdhutchins/docthis")
styler:::style_active_file()
styler:::style_active_file()
devtools::install_github("ropenscilabs/available")
library("available")
available('experimenteR')
available('experimentR')
available('labmanageR')
available('experimenteR')
source("https://bioconductor.org/biocLite.R")
biocLite(c("biomaRt", "edgeR", "preprocessCore", "topGO", "Rgraphviz", "shiny", "DT", "data.table", "hash"))
install.packages('LONGO')
install.packages('longo')
install.packages('ggpubr')
install.packages("available")
install.packages('ggradar')
library(devtools)
devtools::install_github("ricardo-bion/ggradar",
dependencies=TRUE)
remove.packages('yaml')
install.packages('yaml')
library(available)
available("packageR")
install.packages(c("ade4", "callr", "fansi", "ggpubr", "ggthemes", "kernlab", "later", "lme4", "metacoder", "pkgconfig", "plotrix", "processx", "RcppArmadillo", "rlang", "scales", "taxa", "tinytex", "udapi", "XML", "xtable"))
source('C:/Users/shutchins2/Desktop/GitRepo/other-vallender-projects/stress-microbiome-analysis/basic_stats_workflow.R')
install.packages(c("ape", "expm"))
install.packages(c("ggpubr", "ggthemes"))
source("https://bioconductor.org/biocLite.R")
biocLite()
source('C:/Users/shutchins2/Desktop/GitRepo/other-vallender-projects/stress-microbiome-analysis/rdata_files/install_packages.R')
install.packages('styler')
devtools::install_github("sdhutchins/documenteR")
install.packages(c('rticles'))
install.packages("fs")
install.packages("tint")
library(devtools)
install_github("Pakillo/grateful")
install.packages("DiagrammeR")
install.packages("swirl")
install.packages("reticulate")
install.packages("drake")
devtools::install_github('cttobin/ggthemr')
install.packages("formattable")
install.packages("mindr")
install.packages("pkgdown")
install.packages("usethis")
install.packages("ggpage")
install.packages("rplos")
install.packages("infer")
install.packages("rbokeh")
install.packages("kableExtra")
install.packages("workflowr")
devtools::install_github("crsh/papaja")
biocLite("ggtree")
install.packages("officer")
devtools::install_github("hadley/emo")
biocLite("clusterProfiler")
install.packages("ggsci")
install.packages("paletteer")
install.packages(c('shiny', 'shinythemes', 'shinyjs'))
install.packages('markdown')
install.packages('shinyFiles')
devtools::install_github("smbache/loggr")
devtools::install_github("rstudio/fontawesome")
devtools::install_github("gaborcsardi/secret")
install.packages('rmarkdown')
install.packages('git2r')
install.packages("git2r")
library(devtools)
library(git2r)
# Enter your gitlab credentials!
gitlab_username <- "shutchins2"
gitlab_password = "Fypmnov11!"
devtools::install_git("http://gitlab.umsmed.edu/vallender-lab/labtemplates.git", credentials = git2r::cred_user_pass(gitlab_username, gitlab_password))
install.packages("roxygen2")
library(devtools)
install_github("Pakillo/rmdTemplates")
install.packages("pals")
devtools::install_github("RhoInc/CRANsearcher")
install.packages("apaTables",dep=T)
devtools::install_github('kkmann/describr')
install.packages('theseus')
install.packages('blogdown')
devtools::install_github("sebastiansauer/yart")
gitlab_username <- "shutchins2"
gitlab_password = "Fypmnov11!"
devtools::install_git("http://gitlab.umsmed.edu/vallender-lab/labtemplates.git", credentials = git2r::cred_user_pass(gitlab_username, gitlab_password))
library(labtemplates)
library(labtemplates)
date <- format(Sys.Date(), format="%Y%m%d")
rmarkdown::draft(paste0(date, "_labreport.Rmd"), template = "labreport", package = "labtemplates")
install.packages()
install.packages('Diagrammer')
install.packages('DiagrammeR')
styler:::style_pkg()
source('C:/Users/shutchins2/Desktop/GitRepo/templates/diagrams/cell_lines_diagram.R')
library(DiagrammeR)
DiagrammeR("graph LR;
A [fillcolor = red];
A((Cell lines))-->B((SKNMC));
A((Cell lines))-->C((293));
A((Cell lines))-->D((CHOK1))")
library(DiagrammeR)
grViz("
digraph neato {
graph [layout = neato]
node [shape = circle,
style = filled,
color = grey,
label = '']
node [fillcolor = red]
a
node [fillcolor = green]
b c d
node [fillcolor = orange]
edge [color = grey]
a -> {b c d}
b -> {e f g h i j}
c -> {k l m n o p}
d -> {q r s t u v}
}")
grViz("
digraph neato {
graph [layout = neato]
node [shape = circle,
style = filled,
color = grey,
label = '']
node [fillcolor = red]
a
node [fillcolor = green]
b c d
node [fillcolor = orange]
edge [color = grey]
a((Cell lines)) -> {b c d}
b -> {e f g h i j}
c -> {k l m n o p}
d -> {q r s t u v}
}")
ndf <-
create_node_df(
n = 8,
type = c(
"X", "X", "X", "X",
"Y", "Y", "Z", "Z"),
label = c(
"dfs", "udd", "wkd", "xkd",
"qpx", "mdj", "ldk", "wjq"))
# View the node data frame
ndf
graph <-
create_graph(nodes_df = ndf)
graph %>%
render_graph(output = "visNetwork")
edf <-
create_edge_df(
from = c(
1, 2, 5, 7, 6,
8, 4, 4),
to = c(
2, 5, 8, 8, 8,
3, 3, 1),
rel = c(
"rel_a", "rel_a", "rel_b",
"rel_c", "rel_b", "rel_a",
"rel_b", "rel_c"))
graph <-
create_graph(
nodes_df = ndf,
edges_df = edf)
# Render the graph
graph %>%
render_graph(output = "visNetwork")
grViz("
digraph circo {
graph [layout = circo]
node [shape = circle,
style = filled,
color = grey,
label = '']
node [fillcolor = red, label = 'Cell lines']
a
node [fillcolor = green]
b c d
node [fillcolor = orange]
edge [color = grey]
a -> {b c d}
b -> {e f g h i j}
c -> {k l m n o p}
d -> {q r s t u v}
}")
digraph circo {
graph [layout = circo]
node [shape = circle,
style = filled,
color = grey,
label = '']
node [fillcolor = red, label = 'Cell lines']
a
node [fillcolor = green, label = '293']
b
node [fillcolor = green, label = 'SK-N-MC']
c
node [fillcolor = green, label = 'CHOK1']
d
node [fillcolor = orange]
edge [color = grey]
a -> {b c d}
b -> {e f g h i j}
c -> {k l m n o p}
d -> {q r s t u v}
}")
digraph circo {
graph [layout = circo]
node [shape = circle,
style = filled,
color = grey,
label = '']
node [fillcolor = red, label = 'Cell lines']
a
node [fillcolor = green, label = '293']
b
node [fillcolor = green, label = 'SK-N-MC']
c
node [fillcolor = green, label = 'CHOK1']
d
node [fillcolor = orange]
edge [color = grey]
a -> {b c d}
b -> {e f g h i j}
c -> {k l m n o p}
d -> {q r s t u v}
}")
grViz("
digraph circo {
graph [layout = circo]
node [shape = circle,
style = filled,
color = grey,
label = '']
node [fillcolor = red, label = 'Cell lines']
a
node [fillcolor = green, label = '293']
b
node [fillcolor = green, label = 'SK-N-MC']
c
node [fillcolor = green, label = 'CHOK1']
d
node [fillcolor = orange]
edge [color = grey]
a -> {b c d}
b -> {e f g h i j}
c -> {k l m n o p}
d -> {q r s t u v}
}")
install.packages("fs")
packages = c("shiny", "ggplot2", "hexbin", "dplyr", "httr", "jsonlite")
install.packages(packages, repos = "https://cran.rstudio.com/")
library(shiny)
runGitHub("ballr", "toddwschneider")
library(shiny)
?runGitHub
runGitHub("ballr", "toddwschneider")
?install.packages
install.packages('archivist')
BiocManager::install()
if (!requireNamespace("BiocManager"))
install.packages("BiocManager")
BiocManager::install()
remove.packages('AnnotationDbi')
BiocManager::install('AnnotationDbi')
remove.packages('GO.db')
remove.packages('digest')
BiocManager::install('digest')
BiocManager::install('GO.db')
remove.packages('AnnotationDbi')
library(digest)
insta..packages('digest')
install.packages('digest')
library(digest)
install.packages('digest')
library(digest)
BiocManager::install('GO.db')
BiocManager::install('DESeq2')
BiocManager::install('edgeR')
BiocManager::install('clusterprofiler')
BiocManager::install('clusterProfiler')
BiocManager::install('foreign')
remove.packages('foreign')
BiocManager::install('foreign')
BiocManager::install("OMICsPCA", version = "3.8")
BiocManager::install("RNASeqR", version = "3.8")
BiocManager::install("methylGSA", version = "3.8")
BiocManager::install("EnhancedVolcano")
BiocManager::install("FoldGO", version = "3.8")
library(available)
available::available("infographr", browse = FALSE)
devtools::install_github("ropenscilabs/icon")
icon::fa_exclamation_triangle()
icon::fa_info()
rmarkdown::pandoc_version()
packageVersion('rmarkdown')
library(phyloseq)
sample_data(GlobalPatterns)$TreatmentGroup <- sample_data(GlobalPatterns)$SampleType
library(MicrobiomeR)
library(phyloseq)
library(MicrobiomeR)
library(phyloseq)data("GlobalPatterns")
sample_data(GlobalPatterns)$TreatmentGroup <- sample_data(GlobalPatterns)$SampleType
sample_data(GlobalPatterns)$SampleType <- NULL
data("GlobalPatterns")
library(MicrobiomeR)
library(phyloseq)data("GlobalPatterns")
sample_data(GlobalPatterns)$TreatmentGroup <- sample_data(GlobalPatterns)$SampleType
sample_data(GlobalPatterns)$SampleType <- NULL
phy_obj <- phyloseq::subset_samples(GlobalPatterns, TreatmentGroup %in% c("Mock", "Soil"))
setwd("C:/Users/shutchins2/Desktop/GitRepo/personal-repos/jekyll-coders-delight")
